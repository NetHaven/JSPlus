var JS={};JS.lang={};JS.lang.reflect={};JS.lang.JSObject=function(){var b;var d;var c;var a;d=function(){if(!JS.lang.JSObject.HASHCODE){JS.lang.JSObject.HASHCODE=0}JS.lang.JSObject.HASHCODE++;b=JS.lang.JSObject.HASHCODE};c=function(e){return(b==e.hashCode())};a=function(){return(b)};d();return({equals:c,hashCode:a})};JS.lang.reflect.Modifier=function(a){var d;var e;var c;var b;d=function(){return(a.isPrivate)};e=function(){return(a.isProtected)};c=function(){return(a.isPublic)};b=function(){return(a.isStatic)};return({isPrivate:d,isProtected:e,isPublic:c,isStatic:b})};JS.lang.reflect.Modifier.PUBLIC=1;JS.lang.reflect.Modifier.PRIVATE=2;JS.lang.reflect.Modifier.PROTECTED=3;JS.lang.reflect.Modifier.STATIC=4;JS.lang.reflect.Field=function(b){var c;var k;var e;var i;var f;var g;var j;var d;var h;var a;j=function(l){if(!l.name){throw"Syntax Error: No Field Name Specified"}e=l.name;c=l.defaultValue;if(l.access){f=l.access==JS.lang.reflect.Modifier.PUBLIC?true:false;i=l.access==JS.lang.reflect.Modifier.PRIVATE?true:false;g=l.access==JS.lang.reflect.Modifier.STATIC?true:false}else{f=false;i=true;g=false}k=new JS.lang.reflect.Modifier({isPrivate:i,isPublic:f,isStatic:g})};d=function(){return(c)};h=function(){return(k)};a=function(){return(e)};j(b);return({getDefaultValue:d,getModifier:h,getName:a})};JS.lang.reflect.Method=function(j){var e;var m;var d;var h;var k;var f;var g;var l;var b;var i;var a;var c;l=function(n){if(!n.name){throw"Syntax Error: No Method Name Specified"}d=n.name;if(n.access){f=n.access==JS.lang.reflect.Modifier.PUBLIC?true:false;k=n.access==JS.lang.reflect.Modifier.PRIVATE?true:false;g=n.access==JS.lang.reflect.Modifier.STATIC?true:false}else{if(n.name=="init"){f=false;k=true;g=false}else{f=true;k=false;g=false}}m=new JS.lang.reflect.Modifier({isPrivate:k,isPublic:f,isStatic:g});e="";h=(n.params)?n.params:[];if(n.code){e='"'+n.code+'"';e=e.substr(e.indexOf("{")+1);e=e.substr(0,e.lastIndexOf("}"))}};b=function(){return(e)};i=function(){return(m)};a=function(){return(d)};c=function(){return(h)};l(j);return({getCode:b,getModifier:i,getName:a,getParameters:c})};JS.lang.Class=function(i){var f;var l;var e;var g;var k;var c;var b;var h;var j;var a;var d;k=function(){var m;f=[];l=[];if(!i.name){throw"Syntax Error: No Class Name Specified"}e=i.name;if(i.fields){for(m=0;m<i.fields.length;m++){if(!(i.fields[m] instanceof JS.lang.reflect.Field)){f[f.length]=new JS.lang.reflect.Field(i.fields[m])}else{f[f.length]=i.fields[m]}}}if(i.methods){for(m=0;m<i.methods.length;m++){if(!(i.methods[m] instanceof JS.lang.reflect.Method)){l[l.length]=new JS.lang.reflect.Method(i.methods[m])}else{l[l.length]=i.methods[m]}}}l[l.length]=new JS.lang.reflect.Method({name:"getClass",code:function(){return(new JS.lang.Class(i))}});if(i.inherits){g=i.inherits}else{g=JS.lang.JSObject}};c=function(){return(h("init"))};b=function(){return(f)};h=function(n){var m;for(m=0;m<l.length;m++){if(l[m].getName()==n){return(l[m])}}return(null)};j=function(){return(l)};a=function(){return(e)};d=function(){return(g)};k();return({getConstructor:c,getFields:b,getMethod:h,getMethods:j,getName:a,getSuperClass:d})};JS.lang.ClassFactory=function(){var createClass;createClass=function(ClassObj){var ClassString;var Constructor;var DefaultValue;var FieldName;var Fields;var HashedConstParams;var i;var j;var MethodName;var Methods;var NewClass;var Params;var PublicElementCount;NewClass=new JS.lang.Class(ClassObj);Constructor=NewClass.getConstructor();ClassString=NewClass.getName()+"=function(";if(Constructor){Params=Constructor.getParameters();HashedConstParams=[];for(i=0;i<Params.length;i++){HashString="";for(j=0;j<16;j++){HashString=HashString+String.fromCharCode((Math.floor(Math.random()*26)+97))}HashedConstParams[i]=HashString}if(Params.length>0){ClassString+=HashedConstParams[0]}for(j=1;j<Params.length;j++){ClassString+=", "+HashedConstParams[j]}}ClassString+=")\n{\n";Fields=NewClass.getFields();Methods=NewClass.getMethods();for(i=0;i<Fields.length;i++){if(!(Fields[i].getModifier().isStatic())){ClassString+="\tvar "+Fields[i].getName();DefaultValue=Fields[i].getDefaultValue();if(DefaultValue){ClassString+="="+DefaultValue}ClassString+=";\n"}}ClassString+="\tvar SuperClass;\n";for(i=0;i<Methods.length;i++){if(!(Methods[i].getModifier().isStatic())){ClassString+="\tvar "+Methods[i].getName()+";\n"}}for(i=0;i<Methods.length;i++){if(!(Methods[i].getModifier().isStatic())){ClassString+="\t"+Methods[i].getName()+"=function(";Params=Methods[i].getParameters();if(Params.length>0){ClassString+=Params[0]}for(j=1;j<Params.length;j++){ClassString+=", "+Params[j]}ClassString+=")\n\t{\n";ClassString+="\t\t"+Methods[i].getCode()+"\n";ClassString+="\t};\n"}}if(NewClass.getSuperClass()!=JS.lang.JSObject){ClassString+="\tSuperClass=new "+NewClass.getSuperClass()+"();\n"}else{ClassString+="\tSuperClass=new JS.lang.JSObject();\n"}ClassString+="\tfor (var i in SuperClass)\n\t\tif (!this[i])\n\t{\n\t\t\tthis[i]=SuperClass[i];\n\t}\n";if(Constructor){Params=Constructor.getParameters();ClassString+="\tinit(";if(Params.length>0){ClassString+=HashedConstParams[0]}for(j=1;j<Params.length;j++){ClassString+=", "+HashedConstParams[j]}ClassString+=");\n"}ClassString+="\tvar Instance={\n";PublicElementCount=0;for(i=0;i<Fields.length;i++){if(Fields[i].getModifier().isPublic()){FieldName=Fields[i].getName();ClassString+="\t\t";if(PublicElementCount>0){ClassString+=","}ClassString+=FieldName+":"+FieldName+"\n";PublicElementCount++}}for(i=0;i<Methods.length;i++){if(Methods[i].getModifier().isPublic()){MethodName=Methods[i].getName();ClassString+="\t\t";if(PublicElementCount>0){ClassString+=","}ClassString+=MethodName+":"+MethodName+"\n";PublicElementCount++}}ClassString+="\t};\n";ClassString+="for (var i in SuperClass)\n\t\tif (this[i])\n\t{Instance[i] = this[i];}\n";ClassString+="return (Instance);";ClassString+=" };\n";for(i=0;i<Fields.length;i++){if(Fields[i].getModifier().isStatic()){ClassString+=NewClass.getName()+"."+Fields[i].getName();DefaultValue=Fields[i].getDefaultValue();if(DefaultValue){ClassString+="="+DefaultValue}else{ClassString+="=null"}ClassString+=";\n"}}for(i=0;i<Methods.length;i++){if(Methods[i].getModifier().isStatic()){ClassString+=NewClass.getName()+"."+Methods[i].getName()+"=function(";Params=Methods[i].getParameters();if(Params.length>0){ClassString+=Params[0]}for(j=1;j<Params.length;j++){ClassString+=", "+Params[j]}ClassString+=")\n\t{\n";ClassString+="\t\t"+Methods[i].getCode()+"\n";ClassString+="\t};\n"}}alert(ClassString);eval(ClassString)};return({createClass:createClass})}();